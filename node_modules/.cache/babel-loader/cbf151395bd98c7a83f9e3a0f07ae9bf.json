{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/thunder/thunder-goods-cms/src/pages/Board.js\";\nimport { Component } from \"react\";\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      isPlayerX: true,\n      winner: null,\n      history: []\n    };\n  }\n\n  handleSquare(row = 0, col = 0) {\n    let {\n      squares,\n      isPlayerX,\n      winner\n    } = this.state;\n\n    if (squares[3 * row + col]) {\n      return;\n    }\n\n    squares[3 * row + col] = isPlayerX ? 'X' : 'O';\n    let currentWinner = this.showWinner(squares);\n\n    if (winner) {\n      console.log('we have a winner', winner);\n      return;\n    }\n\n    this.addHistory(squares);\n    this.setState({\n      squares,\n      isPlayerX: !isPlayerX,\n      winner: currentWinner\n    });\n  }\n\n  async addHistory(params) {\n    console.log(\">>>>--params-->>>\", params);\n  }\n\n  resetAllSquare() {\n    this.setState({\n      squares: Array(9).fill(null),\n      isPlayerX: true,\n      winner: false,\n      history: []\n    });\n  }\n\n  showWinner(squares) {\n    let possibilitiesOfWinner = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    let winner = null;\n    possibilitiesOfWinner.forEach((ele, idx) => {\n      if (squares[ele[0]] === squares[ele[1]] && squares[ele[1]] === squares[ele[2]]) {\n        winner = squares[ele[0]] !== \"X\" ? squares[ele[0]] === \"O\" ? 'O' : null : \"X\";\n      }\n    });\n    return winner;\n  }\n\n  stepBack(index) {\n    let {\n      history\n    } = this.state;\n    let temp = Object.assign(history[index]);\n    console.log('>>--index-->>', index);\n    console.log('>>--history-->>', history);\n    this.setState({\n      squares: temp\n    });\n  }\n\n  render() {\n    let {\n      squares,\n      isPlayerX,\n      winner,\n      history\n    } = this.state;\n    let squareContainer = [[], [], []];\n    squares.forEach((item, index) => {\n      let rowIndex = parseInt(index / 3);\n      squareContainer[rowIndex].push(item);\n    });\n    let squareAll = [];\n    squareContainer.forEach((item, index) => {\n      let squareRow = [];\n      item.forEach((ele, idx) => {\n        squareRow.push( /*#__PURE__*/_jsxDEV(Square, {\n          value: ele,\n          row: index,\n          col: idx,\n          handleSquare: this.handleSquare.bind(this)\n        }, `${index}-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 24\n        }, this));\n      });\n      squareAll.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'square_row',\n        children: squareRow\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 22\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'square_board',\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'player_note',\n        children: winner ? `the winner is :${winner}` : `next player is :${isPlayerX ? 'X' : 'O'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: squareAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: 'operation_list',\n        children: history.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              this.stepBack(index);\n            },\n            children: [\"step:\", index + 1]\n          }, 'oprate' + index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 're_play',\n        onClick: () => {\n          this.resetAllSquare();\n        },\n        children: \"RePlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/mac/Desktop/thunder/thunder-goods-cms/src/pages/Board.js"],"names":["Component","Square","Board","constructor","props","state","squares","Array","fill","isPlayerX","winner","history","handleSquare","row","col","currentWinner","showWinner","console","log","addHistory","setState","params","resetAllSquare","possibilitiesOfWinner","forEach","ele","idx","stepBack","index","temp","Object","assign","render","squareContainer","item","rowIndex","parseInt","push","squareAll","squareRow","bind","map"],"mappings":"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","sourcesContent":["import { Component} from \"react\";\nimport Square from './Square'\nclass Board extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      isPlayerX:true,\n      winner:null,\n      history:[]\n    }\n  }\n  handleSquare(row=0,col=0){\n    let { squares,isPlayerX,winner} = this.state\n    \n    if(squares[ 3*row + col]){\n      return\n    }\n    squares[ 3*row + col] = isPlayerX?'X':'O'\n    let currentWinner = this.showWinner(squares)\n    if(winner){\n      console.log('we have a winner',winner)\n      return\n    }\n    this.addHistory(squares)\n    this.setState({\n      squares,\n      isPlayerX:!isPlayerX,\n      winner:currentWinner,\n    })\n  }\n  async addHistory(params){\n    console.log(\">>>>--params-->>>\",params)\n    \n  }\n  resetAllSquare(){\n    this.setState({\n      squares:Array(9).fill(null),\n      isPlayerX:true,\n      winner:false,\n      history:[]\n    })\n  }\n  showWinner(squares){\n    let possibilitiesOfWinner = [\n      [0,1,2],\n      [3,4,5],\n      [6,7,8],\n      [0,3,6],\n      [1,4,7],\n      [2,5,8],\n      [0,4,8],\n      [2,4,6]\n    ]\n    let winner = null\n    possibilitiesOfWinner.forEach((ele,idx)=>{\n      if(squares[ele[0]] === squares[ele[1]] && squares[ele[1]] === squares[ele[2]]){\n        winner = squares[ele[0]] !== \"X\"?squares[ele[0]] === \"O\"?'O':null:\"X\"\n      }\n    })\n    return winner\n  }\n  stepBack(index){\n    let { history } = this.state\n    let temp = Object.assign(history[index])\n    console.log('>>--index-->>',index)\n    console.log('>>--history-->>',history)\n    this.setState({\n      squares:temp\n    })\n  }\n  render(){\n    let { squares,isPlayerX,winner,history } = this.state\n    let squareContainer = [[],[],[]]\n    squares.forEach((item,index)=>{\n      let rowIndex = parseInt(index/3)\n      squareContainer[rowIndex].push(item)\n    })\n    let squareAll = []\n    squareContainer.forEach((item,index)=>{\n      let squareRow = []\n      item.forEach((ele,idx)=>{\n        squareRow.push(<Square value={ele} key={`${index}-${idx}`} row={index} col={idx} handleSquare={this.handleSquare.bind(this)}></Square>)\n      })\n      squareAll.push(<div key={index} className={'square_row'}>{squareRow}</div>)\n    })\n    \n    \n    return (\n      <div className={'square_board'}>\n        <p className={'player_note'}>{ winner ?`the winner is :${winner}` :`next player is :${isPlayerX?'X':'O'}`}</p>\n        \n        <div>\n          {squareAll}\n        </div>\n        <ul className={'operation_list'}>\n          {history.map((item,index)=>{\n            return (\n              <li onClick={()=>{this.stepBack(index)} } key={'oprate'+index}>step:{index+1}</li>\n            )\n          })}\n          \n          \n        </ul>\n        <button\n          className={'re_play'}\n          onClick={()=>{this.resetAllSquare()}}\n        >\n          RePlay\n        </button>\n      </div>\n    )\n  }\n}\nexport default Board\n"]},"metadata":{},"sourceType":"module"}