{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/thunder/thunder-goods-cms/src/pages/Board.js\";\nimport { Component } from \"react\";\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      isPlayerX: true\n    };\n  }\n\n  handleSquare(row = 0, col = 0) {\n    let {\n      squares,\n      isPlayerX\n    } = this.state;\n\n    if (squares[3 * row + col]) {\n      return;\n    }\n\n    squares[3 * row + col] = isPlayerX ? 'X' : 'O';\n    this.setState({\n      squares,\n      isPlayerX: !isPlayerX\n    });\n  }\n\n  resetAllSquare() {\n    this.setState({\n      squares: Array(9).fill(null),\n      isPlayerX: true\n    });\n  }\n\n  showWinner() {\n    let possibilitiesOfWinner = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    let {\n      squares\n    } = this.state;\n    let winner = null;\n    possibilitiesOfWinner.forEach((ele, idx) => {\n      console.log('filter---->', squares[ele[0]] === squares[ele[1]] === squares[ele[2]]);\n\n      if (squares[ele[0]] === squares[ele[1]] === squares[ele[2]]) {\n        winner = squares[ele[0]] === \"X\" ? \"X\" : \"O\";\n      }\n    });\n    return winner;\n  }\n\n  render() {\n    let {\n      squares,\n      isPlayerX\n    } = this.state;\n    let squareContainer = [[], [], []];\n    squares.forEach((item, index) => {\n      let rowIndex = parseInt(index / 3);\n      squareContainer[rowIndex].push(item);\n    });\n    let squareAll = [];\n    squareContainer.forEach((item, index) => {\n      let squareRow = [];\n      item.forEach((ele, idx) => {\n        squareRow.push( /*#__PURE__*/_jsxDEV(Square, {\n          value: ele,\n          row: index,\n          col: idx,\n          handleSquare: this.handleSquare.bind(this)\n        }, `${index}-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this));\n      });\n      squareAll.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'square_row',\n        children: squareRow\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 22\n      }, this));\n    });\n    let winner = this.showWinner();\n    console.log(\"winner is :\", winner);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'square_board',\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'player_note',\n        children: [\"next player is :\", isPlayerX ? 'X' : 'O']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: squareAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: 'operation_list',\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"step:1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"step:2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"step:3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 're_play',\n        onClick: () => {\n          this.resetAllSquare();\n        },\n        children: \"RePlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/mac/Desktop/thunder/thunder-goods-cms/src/pages/Board.js"],"names":["Component","Square","Board","constructor","props","state","squares","Array","fill","isPlayerX","handleSquare","row","col","setState","resetAllSquare","showWinner","possibilitiesOfWinner","winner","forEach","ele","idx","console","log","render","squareContainer","item","index","rowIndex","parseInt","push","squareAll","squareRow","bind"],"mappings":";AAAA,SAASA,SAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AACA,MAAMC,KAAN,SAAoBF,SAApB,CAA6B;AAC3BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADE;AAEXC,MAAAA,SAAS,EAAC;AAFC,KAAb;AAID;;AACDC,EAAAA,YAAY,CAACC,GAAG,GAAC,CAAL,EAAOC,GAAG,GAAC,CAAX,EAAa;AACvB,QAAI;AAAEN,MAAAA,OAAF;AAAUG,MAAAA;AAAV,QAAwB,KAAKJ,KAAjC;;AACA,QAAGC,OAAO,CAAE,IAAEK,GAAF,GAAQC,GAAV,CAAV,EAAyB;AACvB;AACD;;AACDN,IAAAA,OAAO,CAAE,IAAEK,GAAF,GAAQC,GAAV,CAAP,GAAwBH,SAAS,GAAC,GAAD,GAAK,GAAtC;AACA,SAAKI,QAAL,CAAc;AACZP,MAAAA,OADY;AAEZG,MAAAA,SAAS,EAAC,CAACA;AAFC,KAAd;AAID;;AACDK,EAAAA,cAAc,GAAE;AACd,SAAKD,QAAL,CAAc;AACZP,MAAAA,OAAO,EAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADI;AAEZC,MAAAA,SAAS,EAAC;AAFE,KAAd;AAID;;AACDM,EAAAA,UAAU,GAAE;AACV,QAAIC,qBAAqB,GAAG,CAC1B,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAD0B,EAE1B,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAF0B,EAG1B,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAH0B,EAI1B,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAJ0B,EAK1B,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAL0B,EAM1B,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAN0B,EAO1B,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAP0B,EAQ1B,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAR0B,CAA5B;AAUA,QAAI;AAACV,MAAAA;AAAD,QAAY,KAAKD,KAArB;AACA,QAAIY,MAAM,GAAG,IAAb;AACAD,IAAAA,qBAAqB,CAACE,OAAtB,CAA8B,CAACC,GAAD,EAAKC,GAAL,KAAW;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BhB,OAAO,CAACa,GAAG,CAAC,CAAD,CAAJ,CAAP,KAAoBb,OAAO,CAACa,GAAG,CAAC,CAAD,CAAJ,CAA3B,KAAwCb,OAAO,CAACa,GAAG,CAAC,CAAD,CAAJ,CAAzE;;AACA,UAAGb,OAAO,CAACa,GAAG,CAAC,CAAD,CAAJ,CAAP,KAAoBb,OAAO,CAACa,GAAG,CAAC,CAAD,CAAJ,CAA3B,KAAwCb,OAAO,CAACa,GAAG,CAAC,CAAD,CAAJ,CAAlD,EAA2D;AACzDF,QAAAA,MAAM,GAAGX,OAAO,CAACa,GAAG,CAAC,CAAD,CAAJ,CAAP,KAAoB,GAApB,GAAwB,GAAxB,GAA4B,GAArC;AACD;AACF,KALD;AAMA,WAAOF,MAAP;AACD;;AACDM,EAAAA,MAAM,GAAE;AACN,QAAI;AAAEjB,MAAAA,OAAF;AAAUG,MAAAA;AAAV,QAAwB,KAAKJ,KAAjC;AACA,QAAImB,eAAe,GAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAtB;AACAlB,IAAAA,OAAO,CAACY,OAAR,CAAgB,CAACO,IAAD,EAAMC,KAAN,KAAc;AAC5B,UAAIC,QAAQ,GAAGC,QAAQ,CAACF,KAAK,GAAC,CAAP,CAAvB;AACAF,MAAAA,eAAe,CAACG,QAAD,CAAf,CAA0BE,IAA1B,CAA+BJ,IAA/B;AACD,KAHD;AAIA,QAAIK,SAAS,GAAG,EAAhB;AACAN,IAAAA,eAAe,CAACN,OAAhB,CAAwB,CAACO,IAAD,EAAMC,KAAN,KAAc;AACpC,UAAIK,SAAS,GAAG,EAAhB;AACAN,MAAAA,IAAI,CAACP,OAAL,CAAa,CAACC,GAAD,EAAKC,GAAL,KAAW;AACtBW,QAAAA,SAAS,CAACF,IAAV,eAAe,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEV,GAAf;AAA4C,UAAA,GAAG,EAAEO,KAAjD;AAAwD,UAAA,GAAG,EAAEN,GAA7D;AAAkE,UAAA,YAAY,EAAE,KAAKV,YAAL,CAAkBsB,IAAlB,CAAuB,IAAvB;AAAhF,WAA0B,GAAEN,KAAM,IAAGN,GAAI,EAAzC;AAAA;AAAA;AAAA;AAAA,gBAAf;AACD,OAFD;AAGAU,MAAAA,SAAS,CAACD,IAAV,eAAe;AAAiB,QAAA,SAAS,EAAE,YAA5B;AAAA,kBAA2CE;AAA3C,SAAUL,KAAV;AAAA;AAAA;AAAA;AAAA,cAAf;AACD,KAND;AAQA,QAAIT,MAAM,GAAG,KAAKF,UAAL,EAAb;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BL,MAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA,8BACE;AAAG,QAAA,SAAS,EAAE,aAAd;AAAA,uCAA+CR,SAAS,GAAC,GAAD,GAAK,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGqB;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAI,QAAA,SAAS,EAAE,gBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAUE;AACE,QAAA,SAAS,EAAE,SADb;AAEE,QAAA,OAAO,EAAE,MAAI;AAAC,eAAKhB,cAAL;AAAsB,SAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAnF0B;;AAqF7B,eAAeZ,KAAf","sourcesContent":["import { Component} from \"react\";\nimport Square from './Square'\nclass Board extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      isPlayerX:true,\n    }\n  }\n  handleSquare(row=0,col=0){\n    let { squares,isPlayerX } = this.state\n    if(squares[ 3*row + col]){\n      return\n    }\n    squares[ 3*row + col] = isPlayerX?'X':'O'\n    this.setState({\n      squares,\n      isPlayerX:!isPlayerX\n    })\n  }\n  resetAllSquare(){\n    this.setState({\n      squares:Array(9).fill(null),\n      isPlayerX:true\n    })\n  }\n  showWinner(){\n    let possibilitiesOfWinner = [\n      [0,1,2],\n      [3,4,5],\n      [6,7,8],\n      [0,3,6],\n      [1,4,7],\n      [2,5,8],\n      [0,4,8],\n      [2,4,6]\n    ]\n    let {squares} = this.state\n    let winner = null\n    possibilitiesOfWinner.forEach((ele,idx)=>{\n      console.log('filter---->',squares[ele[0]] === squares[ele[1]] === squares[ele[2]])\n      if(squares[ele[0]] === squares[ele[1]] === squares[ele[2]]){\n        winner = squares[ele[0]] === \"X\"?\"X\":\"O\"\n      }\n    })\n    return winner\n  }\n  render(){\n    let { squares,isPlayerX } = this.state\n    let squareContainer = [[],[],[]]\n    squares.forEach((item,index)=>{\n      let rowIndex = parseInt(index/3)\n      squareContainer[rowIndex].push(item)\n    })\n    let squareAll = []\n    squareContainer.forEach((item,index)=>{\n      let squareRow = []\n      item.forEach((ele,idx)=>{\n        squareRow.push(<Square value={ele} key={`${index}-${idx}`} row={index} col={idx} handleSquare={this.handleSquare.bind(this)}></Square>)\n      })\n      squareAll.push(<div key={index} className={'square_row'}>{squareRow}</div>)\n    })\n    \n    let winner = this.showWinner()\n    console.log(\"winner is :\",winner)\n    return (\n      <div className={'square_board'}>\n        <p className={'player_note'}>next player is :{ isPlayerX?'X':'O' }</p>\n        <div>\n          {squareAll}\n        </div>\n        <ul className={'operation_list'}>\n          <li>step:1</li>\n          <li>step:2</li>\n          <li>step:3</li>\n        </ul>\n        <button\n          className={'re_play'}\n          onClick={()=>{this.resetAllSquare()}}\n        >\n          RePlay\n        </button>\n      </div>\n    )\n  }\n}\nexport default Board\n"]},"metadata":{},"sourceType":"module"}